simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ ls
README.md  kube-manifests
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ ls kube-manifests/
01-Nginx-App1-Deployment-and-NodePortService.yaml  02-Nginx-App2-Deployment-and-NodePortService.yaml  03-Nginx-App3-Deployment-and-NodePortService.yaml  04-Ingress-ContextPath-Based-Routing.yaml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ ls -ltr kube-manifests/
total 16
-rwxr-xr-x 1 simplyrahul simplyrahul 993 Aug 26 14:03 04-Ingress-ContextPath-Based-Routing.yaml
-rw-r--r-- 1 simplyrahul simplyrahul 617 Aug 26 14:03 03-Nginx-App3-Deployment-and-NodePortService.yaml
-rwxr-xr-x 1 simplyrahul simplyrahul 627 Aug 26 14:03 02-Nginx-App2-Deployment-and-NodePortService.yaml
-rwxr-xr-x 1 simplyrahul simplyrahul 621 Aug 26 14:03 01-Nginx-App1-Deployment-and-NodePortService.yaml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ cat kube-manifests/01-Nginx-App1-Deployment-and-NodePortService.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1-nginx-deployment
  labels:
    app: app1-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1-nginx
  template:
    metadata:
      labels:
        app: app1-nginx
    spec:
      containers:
        - name: app1-nginx
          image: stacksimplify/kube-nginxapp1:1.0.0
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: app1-nginx-nodeport-service
  labels:
    app: app1-nginx
  annotations:
spec:
  type: NodePort
  selector:
    app: app1-nginx
  ports:
    - port: 80
      targetPort: 80simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ cat kube-manifests/02-Nginx-App2-Deployment-and-NodePortService.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2-nginx-deployment
  labels:
    app: app2-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app2-nginx
  template:
    metadata:
      labels:
        app: app2-nginx
    spec:
      containers:
        - name: app2-nginx
          image: stacksimplify/kube-nginxapp2:1.0.0
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: app2-nginx-nodeport-service
  labels:
    app: app2-nginx
  annotations:
spec:
  type: NodePort
  selector:
    app: app2-nginx
  ports:
    - port: 80
      targetPort: 80

   simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ cat kube-manifests/03-Nginx-App3-Deployment-and-NodePortService.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app3-nginx-deployment
  labels:
    app: app3-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app3-nginx
  template:
    metadata:
      labels:
        app: app3-nginx
    spec:
      containers:
        - name: app3-nginx
          image: stacksimplify/kubenginx:1.0.0
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: app3-nginx-nodeport-service
  labels:
    app: app3-nginx
  annotations:
spec:
  type: NodePort
  selector:
    app: app3-nginx
  ports:
    - port: 80
      targetPort: 80simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ cat kube-manifests/04-Ingress-ContextPath-Based-Routing.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-cpr
  annotations:
    # External Load Balancer
    kubernetes.io/ingress.class: "gce"
spec:
  defaultBackend:
    service:
      name: app3-nginx-nodeport-service
      port:
        number: 80
  rules:
    - http:
        paths:
          - path: /app1
            pathType: Prefix
            backend:
              service:
                name: app1-nginx-nodeport-service
                port:
                  number: 80
          - path: /app2
            pathType: Prefix
            backend:
              service:
                name: app2-nginx-nodeport-service
                port:
                  number: 80
#          - path: /
#            pathType: Prefix
#            backend:
#              service:
#                name: app3-nginx-nodeport-service
#                port:
#                  number: 80



    simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl apply -f kube-manifests/
deployment.apps/app1-nginx-deployment created
service/app1-nginx-nodeport-service created
deployment.apps/app2-nginx-deployment created
service/app2-nginx-nodeport-service created
deployment.apps/app3-nginx-deployment created
service/app3-nginx-nodeport-service created
Warning: annotation "kubernetes.io/ingress.class" is deprecated, please use 'spec.ingressClassName' instead
ingress.networking.k8s.io/ingress-cpr created
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl get deploy
NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
app1-nginx-deployment   1/1     1            1           39m
app2-nginx-deployment   1/1     1            1           39m
app3-nginx-deployment   1/1     1            1           39m
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl get pods -o wide --show-labels
NAME                                     READY   STATUS    RESTARTS   AGE   IP            NODE                                                  NOMINATED NODE   READINESS GATES   LABELS
app1-nginx-deployment-5784958755-rn5jl   1/1     Running   0          39m   10.76.1.105   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app=app1-nginx,pod-template-hash=5784958755
app2-nginx-deployment-6b96c98458-xrwnh   1/1     Running   0          39m   10.76.1.106   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app=app2-nginx,pod-template-hash=6b96c98458
app3-nginx-deployment-776cb56c8d-q8kfr   1/1     Running   0          39m   10.76.1.107   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app=app3-nginx,pod-template-hash=776cb56c8d
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl get svc -o wide --show-labels
NAME                          TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE   SELECTOR         LABELS
app1-nginx-nodeport-service   NodePort    10.80.14.249   <none>        80:32511/TCP   39m   app=app1-nginx   app=app1-nginx
app2-nginx-nodeport-service   NodePort    10.80.4.48     <none>        80:30041/TCP   39m   app=app2-nginx   app=app2-nginx
app3-nginx-nodeport-service   NodePort    10.80.13.186   <none>        80:32655/TCP   39m   app=app3-nginx   app=app3-nginx
kubernetes                    ClusterIP   10.80.0.1      <none>        443/TCP        22d   <none>           component=apiserver,provider=kubernetes
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl get ingress -o wide --show-labels
NAME          CLASS    HOSTS   ADDRESS          PORTS   AGE   LABELS
ingress-cpr   <none>   *       34.160.177.155   80      40m   <none>
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl describe ingress ingress-cpr
Name:             ingress-cpr
Labels:           <none>
Namespace:        default
Address:          34.160.177.155
Ingress Class:    <none>
Default backend:  app3-nginx-nodeport-service:80 (10.76.1.107:80)
Rules:
  Host        Path  Backends
  ----        ----  --------
  *
              /app1   app1-nginx-nodeport-service:80 (10.76.1.105:80)
              /app2   app2-nginx-nodeport-service:80 (10.76.1.106:80)
Annotations:  ingress.kubernetes.io/backends:
                {"k8s1-3b22a415-default-app1-nginx-nodeport-service-80-28b50edc":"HEALTHY","k8s1-3b22a415-default-app2-nginx-nodeport-service-80-61584a78"...
              ingress.kubernetes.io/forwarding-rule: k8s2-fr-jdj5k2n0-default-ingress-cpr-453d43aj
              ingress.kubernetes.io/target-proxy: k8s2-tp-jdj5k2n0-default-ingress-cpr-453d43aj
              ingress.kubernetes.io/url-map: k8s2-um-jdj5k2n0-default-ingress-cpr-453d43aj
              kubernetes.io/ingress.class: gce
Events:
  Type    Reason     Age                From                     Message
  ----    ------     ----               ----                     -------
  Normal  Sync       38m                loadbalancer-controller  UrlMap "k8s2-um-jdj5k2n0-default-ingress-cpr-453d43aj" created
  Normal  Sync       38m                loadbalancer-controller  TargetProxy "k8s2-tp-jdj5k2n0-default-ingress-cpr-453d43aj" created
  Normal  Sync       37m                loadbalancer-controller  ForwardingRule "k8s2-fr-jdj5k2n0-default-ingress-cpr-453d43aj" created
  Normal  IPChanged  37m                loadbalancer-controller  IP is now 34.160.177.155
  Normal  Sync       29s (x9 over 40m)  loadbalancer-controller  Scheduled for sync
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ curl -s http://34.160.177.155
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ curl -s http://34.160.177.155/app1
<html>
<head><title>301 Moved Permanently</title></head>
<body>
<center><h1>301 Moved Permanently</h1></center>
<hr><center>nginx/1.17.10</center>
</body>
</html>
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ curl -s http://34.160.177.155/app2
<html>
<head><title>301 Moved Permanently</title></head>
<body>
<center><h1>301 Moved Permanently</h1></center>
<hr><center>nginx/1.17.10</center>
</body>
</html>
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ curl -s http://34.160.177.155/app3
<html>
<head><title>404 Not Found</title></head>
<body>
<center><h1>404 Not Found</h1></center>
<hr><center>nginx/1.17.10</center>
</body>
</html>
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ curl -s http://34.160.177.155/app1/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(228, 250, 210);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App1</p>
   </body>
</html>simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ curl -s http://34.160.177.155/app2/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(221, 210, 250);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App2</p>
   </body>
</html>simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ curl -s http://34.160.177.155/
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl get svc -o wide --show-labels
NAME                          TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE   SELECTOR         LABELS
app1-nginx-nodeport-service   NodePort    10.80.14.249   <none>        80:32511/TCP   42m   app=app1-nginx   app=app1-nginx
app2-nginx-nodeport-service   NodePort    10.80.4.48     <none>        80:30041/TCP   42m   app=app2-nginx   app=app2-nginx
app3-nginx-nodeport-service   NodePort    10.80.13.186   <none>        80:32655/TCP   42m   app=app3-nginx   app=app3-nginx
kubernetes                    ClusterIP   10.80.0.1      <none>        443/TCP        22d   <none>           component=apiserver,provider=kubernetes
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl get pods -o wide --show-labels
NAME                                     READY   STATUS    RESTARTS   AGE   IP            NODE                                                  NOMINATED NODE   READINESS GATES   LABELS
app1-nginx-deployment-5784958755-rn5jl   1/1     Running   0          42m   10.76.1.105   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app=app1-nginx,pod-template-hash=5784958755
app2-nginx-deployment-6b96c98458-xrwnh   1/1     Running   0          42m   10.76.1.106   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app=app2-nginx,pod-template-hash=6b96c98458
app3-nginx-deployment-776cb56c8d-q8kfr   1/1     Running   0          42m   10.76.1.107   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app=app3-nginx,pod-template-hash=776cb56c8d
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl run -it tempcurlpod --image=curlimages/curl --rm --restart=Never -- sh -c "curl -s http://10.80.14.249/app1/"
If you don't see a command prompt, try pressing enter.
warning: couldn't attach to pod/tempcurlpod, falling back to streaming logs: unable to upgrade connection: container tempcurlpod not found in pod tempcurlpod_default
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(228, 250, 210);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App1</p>
   </body>
</html>pod "tempcurlpod" deleted
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl run -it tempcurlpod --image=curlimages/curl --rm --restart=Never -- sh -c "curl -s http://10.80.4.48/app2/"
If you don't see a command prompt, try pressing enter.
warning: couldn't attach to pod/tempcurlpod, falling back to streaming logs: unable to upgrade connection: container tempcurlpod not found in pod tempcurlpod_default
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(221, 210, 250);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App2</p>
   </body>
</html>pod "tempcurlpod" deleted
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl run -it tempcurlpod --image=curlimages/curl --rm --restart=Never -- sh -c "curl -s http://10.80.13.186/"
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>pod "tempcurlpod" deleted
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl run -it tempcurlpod --image=curlimages/curl --rm --restart=Never -- sh -c "curl -s http://10.76.1.105/app1/"
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(228, 250, 210);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App1</p>
   </body>
</html>pod "tempcurlpod" deleted
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl run -it tempcurlpod --image=curlimages/curl --rm --restart=Never -- sh -c "curl -s http://10.76.1.106/app2/"
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(221, 210, 250);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App2</p>
   </body>
</html>pod "tempcurlpod" deleted
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl run -it tempcurlpod --image=curlimages/curl --rm --restart=Never -- sh -c "curl -s http://10.76.1.107/"
If you don't see a command prompt, try pressing enter.
warning: couldn't attach to pod/tempcurlpod, falling back to streaming logs: unable to upgrade connection: container tempcurlpod not found in pod tempcurlpod_default
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>pod "tempcurlpod" deleted
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$ kubectl delete -f kube-manifests/
deployment.apps "app1-nginx-deployment" deleted
service "app1-nginx-nodeport-service" deleted
deployment.apps "app2-nginx-deployment" deleted
service "app2-nginx-nodeport-service" deleted
deployment.apps "app3-nginx-deployment" deleted
service "app3-nginx-nodeport-service" deleted
ingress.networking.k8s.io "ingress-cpr" deleted
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/35-GKE-Ingress-Context-Path-Routing$
