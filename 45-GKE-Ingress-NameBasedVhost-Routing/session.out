simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ ls
README.md  kube-manifests
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ ls kube-manifests/
01-Nginx-App1-Deployment-and-NodePortService.yaml  03-Nginx-App3-Deployment-and-NodePortService.yaml  05-Managed-Certificate.yaml
02-Nginx-App2-Deployment-and-NodePortService.yaml  04-Ingress-NameBasedVHost-Routing.yaml             06-frontendconfig.yaml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ cat kube-manifests/01-Nginx-App1-Deployment-and-NodePortService.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1-nginx-deployment
  labels:
    app: app1-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1-nginx
  template:
    metadata:
      labels:
        app: app1-nginx
    spec:
      containers:
        - name: app1-nginx
          image: stacksimplify/kube-nginxapp1:1.0.0
          ports:
            - containerPort: 80
          # Readiness Probe (https://cloud.google.com/kubernetes-engine/docs/concepts/ingress#def_inf_hc)
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /app1/index.html
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: app1-nginx-nodeport-service
  labels:
    app: app1-nginx
  annotations:
spec:
  type: NodePort
  selector:
    app: app1-nginx
  ports:
    - port: 80
      targetPort: 80

   simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ cat kube-manifests/02-Nginx-App2-Deployment-and-NodePortService.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2-nginx-deployment
  labels:
    app: app2-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app2-nginx
  template:
    metadata:
      labels:
        app: app2-nginx
    spec:
      containers:
        - name: app2-nginx
          image: stacksimplify/kube-nginxapp2:1.0.0
          ports:
            - containerPort: 80
          # Readiness Probe (https://cloud.google.com/kubernetes-engine/docs/concepts/ingress#def_inf_hc)
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /app2/index.html
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: app2-nginx-nodeport-service
  labels:
    app: app2-nginx
  annotations:
spec:
  type: NodePort
  selector:
    app: app2-nginx
  ports:
    - port: 80
      targetPort: 80

   simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ cat kube-manifests/03-Nginx-App3-Deployment-and-NodePortService.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app3-nginx-deployment
  labels:
    app: app3-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app3-nginx
  template:
    metadata:
      labels:
        app: app3-nginx
    spec:
      containers:
        - name: app3-nginx
          image: stacksimplify/kubenginx:1.0.0
          ports:
            - containerPort: 80
          # Readiness Probe (https://cloud.google.com/kubernetes-engine/docs/concepts/ingress#def_inf_hc)
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /index.html
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: app3-nginx-nodeport-service
  labels:
    app: app3-nginx
  annotations:
spec:
  type: NodePort
  selector:
    app: app3-nginx
  ports:
    - port: 80
      targetPort: 80simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ cat kube-manifests/04-Ingress-NameBasedVHost-Routing.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-namebasedvhost-routing
  annotations:
    # External Load Balancer
    kubernetes.io/ingress.class: "gce"
    # Static IP for Ingress Service
    kubernetes.io/ingress.global-static-ip-name: "gke-ingress-extip1"
    # Google Managed SSL Certificates
    networking.gke.io/managed-certificates: managed-cert-for-ingress
    # SSL Redirect HTTP to HTTPS
    networking.gke.io/v1beta1.FrontendConfig: "my-frontend-config"
    # External DNS - For creating a Record Set in Google Cloud Cloud DNS
    external-dns.alpha.kubernetes.io/hostname: default-ingress.kalyanreddydaida.com
spec:
  defaultBackend:
    service:
      name: app3-nginx-nodeport-service
      port:
        number: 80
  rules:
    - host: app1-ingress.kalyanreddydaida.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app1-nginx-nodeport-service
                port:
                  number: 80
    - host: app2-ingress.kalyanreddydaida.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app2-nginx-nodeport-service
                port:
                  number: 80

simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ vim kube-manifests/04-Ingress-NameBasedVHost-Routing.yaml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ cat kube-manifests/04-Ingress-NameBasedVHost-Routing.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-namebasedvhost-routing
  annotations:
    # External Load Balancer
    kubernetes.io/ingress.class: "gce"
    # Static IP for Ingress Service
    kubernetes.io/ingress.global-static-ip-name: "gke-ingress-extip1"
    # Google Managed SSL Certificates
    networking.gke.io/managed-certificates: managed-cert-for-ingress
    # SSL Redirect HTTP to HTTPS
    networking.gke.io/v1beta1.FrontendConfig: "my-frontend-config"
    # External DNS - For creating a Record Set in Google Cloud Cloud DNS
    external-dns.alpha.kubernetes.io/hostname: sara-ingress.rahulsinha.info
spec:
  defaultBackend:
    service:
      name: app3-nginx-nodeport-service
      port:
        number: 80
  rules:
    - host: sara1-ingress.rahulsinha.info
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app1-nginx-nodeport-service
                port:
                  number: 80
    - host: sara2-ingress.rahulsinha.info
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app2-nginx-nodeport-service
                port:
                  number: 80

simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ cat kube-manifests/05-Managed-Certificate.yaml
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-cert-for-ingress
spec:
  domains:
    - default-ingress.kalyanreddydaida.com
    - app1-ingress.kalyanreddydaida.com
    - app2-ingress.kalyanreddydaida.comsimplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ vim kube-manifests/05-Managed-Certificate.yaml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ cat kube-manifests/05-Managed-Certificate.yaml
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-cert-for-ingress
spec:
  domains:
    - sara-ingress.rahulsinha.info
    - sara1-ingress.rahulsinha.info
    - sara2-ingress.rahulsinha.info
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ cat kube-manifests/06-frontendconfig.yaml
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: my-frontend-config
spec:
  redirectToHttps:
    enabled: true
    #responseCodeName: RESPONSE_CODEsimplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ ls kube-manifests/
01-Nginx-App1-Deployment-and-NodePortService.yaml  03-Nginx-App3-Deployment-and-NodePortService.yaml  05-Managed-Certificate.yaml
02-Nginx-App2-Deployment-and-NodePortService.yaml  04-Ingress-NameBasedVHost-Routing.yaml             06-frontendconfig.yaml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ vim 00-external-ip.txt
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl get all
NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.80.0.1    <none>        443/TCP   30d
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl get pods -o wide --show-labels
No resources found in default namespace.
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl get ns
NAME                       STATUS   AGE
default                    Active   30d
external-dns-ns            Active   3d10h
gke-managed-filestorecsi   Active   30d
gmp-public                 Active   30d
gmp-system                 Active   30d
kube-node-lease            Active   30d
kube-public                Active   30d
kube-system                Active   30d
wid-kns                    Active   4d16h
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl get pods -o wide --show-labels -n external-dns-ns
NAME                            READY   STATUS    RESTARTS   AGE     IP            NODE                                                  NOMINATED NODE   READINESS GATES   LABELS
external-dns-65798ffcb8-4dqs2   1/1     Running   0          2d23h   10.76.1.152   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app.kubernetes.io/instance=external-dns,app.kubernetes.io/name=external-dns,pod-template-hash=65798ffcb8
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubernetes describe pods external-dns-65798ffcb8-4dqs2

Command 'kubernetes' not found, but can be installed with:

sudo apt install kubernetes

simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl describe pods external-dns-65798ffcb8-4dqs2
Error from server (NotFound): pods "external-dns-65798ffcb8-4dqs2" not found
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl describe pods external-dns-65798ffcb8-4dqs2 -n external-dns-ns
Name:             external-dns-65798ffcb8-4dqs2
Namespace:        external-dns-ns
Priority:         0
Service Account:  external-dns-ksa
Node:             gke-private-standard-22a-default-pool-f62b7b3f-4qbg/10.128.0.50
Start Time:       Tue, 19 Sep 2023 06:40:10 +0800
Labels:           app.kubernetes.io/instance=external-dns
                  app.kubernetes.io/name=external-dns
                  pod-template-hash=65798ffcb8
Annotations:      <none>
Status:           Running
SeccompProfile:   RuntimeDefault
IP:               10.76.1.152
IPs:
  IP:           10.76.1.152
Controlled By:  ReplicaSet/external-dns-65798ffcb8
Containers:
  external-dns:
    Container ID:  containerd://262e993ea8124eed918f24035285f54743eb957180c3159c062791c1ed6ccc1d
    Image:         registry.k8s.io/external-dns/external-dns:v0.13.6
    Image ID:      registry.k8s.io/external-dns/external-dns@sha256:404fafa9f814832bb0a46c562ce03b84dc6fb4326643e2315c17a15ffd0783e4
    Port:          7979/TCP
    Host Port:     0/TCP
    Args:
      --log-level=info
      --log-format=text
      --interval=1m
      --source=service
      --source=ingress
      --policy=sync
      --registry=txt
      --provider=google
    State:          Running
      Started:      Tue, 19 Sep 2023 06:40:11 +0800
    Ready:          True
    Restart Count:  0
    Liveness:       http-get http://:http/healthz delay=10s timeout=5s period=10s #success=1 #failure=2
    Readiness:      http-get http://:http/healthz delay=5s timeout=5s period=10s #success=1 #failure=6
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-svmdx (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  kube-api-access-svmdx:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:                      <none>
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl apply -f kube-manifests/
deployment.apps/app1-nginx-deployment created
service/app1-nginx-nodeport-service created
deployment.apps/app2-nginx-deployment created
service/app2-nginx-nodeport-service created
deployment.apps/app3-nginx-deployment created
service/app3-nginx-nodeport-service created
Warning: annotation "kubernetes.io/ingress.class" is deprecated, please use 'spec.ingressClassName' instead
ingress.networking.k8s.io/ingress-namebasedvhost-routing created
managedcertificate.networking.gke.io/managed-cert-for-ingress created
frontendconfig.networking.gke.io/my-frontend-config created
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl get deploy
NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
app1-nginx-deployment   1/1     1            1           18s
app2-nginx-deployment   1/1     1            1           17s
app3-nginx-deployment   1/1     1            1           16s
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl get pods -o wide --show-labels
NAME                                     READY   STATUS    RESTARTS   AGE   IP            NODE                                                  NOMINATED NODE   READINESS GATES   LABELS
app1-nginx-deployment-544dfb8c8f-jpf2p   1/1     Running   0          38s   10.76.0.17    gke-private-standard-22a-default-pool-b8a9f9fd-1hff   <none>           <none>            app=app1-nginx,pod-template-hash=544dfb8c8f
app2-nginx-deployment-7c46c8bb8c-z6zqf   1/1     Running   0          37s   10.76.2.19    gke-private-standard-22a-default-pool-76d79b51-6f20   <none>           <none>            app=app2-nginx,pod-template-hash=7c46c8bb8c
app3-nginx-deployment-5778df6d5f-xbdzp   1/1     Running   0          36s   10.76.1.159   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app=app3-nginx,pod-template-hash=5778df6d5f
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl get svc -o wide --show-labels
NAME                          TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE   SELECTOR         LABELS
app1-nginx-nodeport-service   NodePort    10.80.15.198   <none>        80:32084/TCP   75s   app=app1-nginx   app=app1-nginx
app2-nginx-nodeport-service   NodePort    10.80.11.202   <none>        80:31867/TCP   74s   app=app2-nginx   app=app2-nginx
app3-nginx-nodeport-service   NodePort    10.80.2.217    <none>        80:31211/TCP   74s   app=app3-nginx   app=app3-nginx
kubernetes                    ClusterIP   10.80.0.1      <none>        443/TCP        30d   <none>           component=apiserver,provider=kubernetes
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl get ingress -o wide --show-labels
NAME                             CLASS    HOSTS                                                         ADDRESS   PORTS   AGE   LABELS
ingress-namebasedvhost-routing   <none>   sara1-ingress.rahulsinha.info,sara2-ingress.rahulsinha.info             80      90s   <none>
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl describe ingress ingress-namebasedvhost-routing
Name:             ingress-namebasedvhost-routing
Labels:           <none>
Namespace:        default
Address:
Ingress Class:    <none>
Default backend:  app3-nginx-nodeport-service:80 (10.76.1.159:80)
Rules:
  Host                           Path  Backends
  ----                           ----  --------
  sara1-ingress.rahulsinha.info
                                 /   app1-nginx-nodeport-service:80 (10.76.0.17:80)
  sara2-ingress.rahulsinha.info
                                 /   app2-nginx-nodeport-service:80 (10.76.2.19:80)
Annotations:                     external-dns.alpha.kubernetes.io/hostname: sara-ingress.rahulsinha.info
                                 ingress.gcp.kubernetes.io/pre-shared-cert: mcrt-9e1ced7c-3fed-4d41-84e5-9359f1ce2a10
                                 kubernetes.io/ingress.class: gce
                                 kubernetes.io/ingress.global-static-ip-name: gke-ingress-extip1
                                 networking.gke.io/managed-certificates: managed-cert-for-ingress
                                 networking.gke.io/v1beta1.FrontendConfig: my-frontend-config
Events:
  Type     Reason              Age                  From                            Message
  ----     ------              ----                 ----                            -------
  Warning  MissingCertificate  111s                 managed-certificate-controller  ManagedCertificate default:managed-cert-for-ingress missing
  Normal   Sync                110s (x3 over 111s)  loadbalancer-controller         Scheduled for sync
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl get managedcertificate
NAME                       AGE     STATUS
managed-cert-for-ingress   3m12s   Provisioning
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl get frontendconfig
NAME                 AGE
my-frontend-config   3m33s
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl describe frontendconfig my-frontend-config
Name:         my-frontend-config
Namespace:    default
Labels:       <none>
Annotations:  <none>
API Version:  networking.gke.io/v1beta1
Kind:         FrontendConfig
Metadata:
  Creation Timestamp:  2023-09-21T21:56:29Z
  Generation:          1
  Resource Version:    31781667
  UID:                 f3094417-4665-4942-a9a4-71f75ba8cd1e
Spec:
  Redirect To Https:
    Enabled:  true
Events:       <none>
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl describe managedcertificate managed-cert-for-ingress
Name:         managed-cert-for-ingress
Namespace:    default
Labels:       <none>
Annotations:  <none>
API Version:  networking.gke.io/v1
Kind:         ManagedCertificate
Metadata:
  Creation Timestamp:  2023-09-21T21:56:28Z
  Generation:          3
  Resource Version:    31781801
  UID:                 487635f7-e929-4ea4-851f-4e63a5010072
Spec:
  Domains:
    sara-ingress.rahulsinha.info
    sara1-ingress.rahulsinha.info
    sara2-ingress.rahulsinha.info
Status:
  Certificate Name:    mcrt-9e1ced7c-3fed-4d41-84e5-9359f1ce2a10
  Certificate Status:  Provisioning
  Domain Status:
    Domain:  sara-ingress.rahulsinha.info
    Status:  Provisioning
    Domain:  sara2-ingress.rahulsinha.info
    Status:  Provisioning
    Domain:  sara1-ingress.rahulsinha.info
    Status:  Provisioning
Events:
  Type    Reason  Age    From                            Message
  ----    ------  ----   ----                            -------
  Normal  Create  4m21s  managed-certificate-controller  Create SslCertificate mcrt-9e1ced7c-3fed-4d41-84e5-9359f1ce2a10
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl describe managedcertificate managed-cert-for-ingress
Name:         managed-cert-for-ingress
Namespace:    default
Labels:       <none>
Annotations:  <none>
API Version:  networking.gke.io/v1
Kind:         ManagedCertificate
Metadata:
  Creation Timestamp:  2023-09-21T21:56:28Z
  Generation:          5
  Resource Version:    31793037
  UID:                 487635f7-e929-4ea4-851f-4e63a5010072
Spec:
  Domains:
    sara-ingress.rahulsinha.info
    sara1-ingress.rahulsinha.info
    sara2-ingress.rahulsinha.info
Status:
  Certificate Name:    mcrt-9e1ced7c-3fed-4d41-84e5-9359f1ce2a10
  Certificate Status:  Active
  Domain Status:
    Domain:     sara2-ingress.rahulsinha.info
    Status:     Active
    Domain:     sara1-ingress.rahulsinha.info
    Status:     Active
    Domain:     sara-ingress.rahulsinha.info
    Status:     Active
  Expire Time:  2023-12-20T13:56:31.000-08:00
Events:
  Type    Reason  Age   From                            Message
  ----    ------  ----  ----                            -------
  Normal  Create  22m   managed-certificate-controller  Create SslCertificate mcrt-9e1ced7c-3fed-4d41-84e5-9359f1ce2a10
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl https://sara-ingress.rahulsinha.info
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl https://sara1-ingress.rahulsinha.info
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl https://sara1-ingress.rahulsinha.info/
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl https://sara1-ingress.rahulsinha.info/app1/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(228, 250, 210);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App1</p>
   </body>
</html>simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl https://sara2-ingress.rahulsinha.info/app2/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(221, 210, 250);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App2</p>
   </body>
</html>simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl http://sara1-ingress.rahulsinha.info/
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl -I http://sara1-ingress.rahulsinha.info/
HTTP/1.1 301 Moved Permanently
Cache-Control: private
Location: https://sara1-ingress.rahulsinha.info:443/
Content-Length: 0
Date: Thu, 21 Sep 2023 22:20:35 GMT
Content-Type: text/html; charset=UTF-8

simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl -v http://sara1-ingress.rahulsinha.info/
*   Trying 34.36.100.7:80...
* TCP_NODELAY set
* Connected to sara1-ingress.rahulsinha.info (34.36.100.7) port 80 (#0)
> GET / HTTP/1.1
> Host: sara1-ingress.rahulsinha.info
> User-Agent: curl/7.68.0
> Accept: */*
>
* Mark bundle as not supporting multiuse
< HTTP/1.1 301 Moved Permanently
< Cache-Control: private
< Location: https://sara1-ingress.rahulsinha.info:443/
< Content-Length: 0
< Date: Thu, 21 Sep 2023 22:20:40 GMT
< Content-Type: text/html; charset=UTF-8
<
* Connection #0 to host sara1-ingress.rahulsinha.info left intact
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl -v https://sara1-ingress.rahulsinha.info/
*   Trying 34.36.100.7:443...
* TCP_NODELAY set
* Connected to sara1-ingress.rahulsinha.info (34.36.100.7) port 443 (#0)
* ALPN, offering h2
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: /etc/ssl/certs/ca-certificates.crt
  CApath: /etc/ssl/certs
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
* TLSv1.3 (IN), TLS handshake, Server hello (2):
* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
* TLSv1.3 (IN), TLS handshake, Certificate (11):
* TLSv1.3 (IN), TLS handshake, CERT verify (15):
* TLSv1.3 (IN), TLS handshake, Finished (20):
* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
* TLSv1.3 (OUT), TLS handshake, Finished (20):
* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384
* ALPN, server accepted to use h2
* Server certificate:
*  subject: CN=sara-ingress.rahulsinha.info
*  start date: Sep 21 21:06:40 2023 GMT
*  expire date: Dec 20 21:56:31 2023 GMT
*  subjectAltName: host "sara1-ingress.rahulsinha.info" matched cert's "sara1-ingress.rahulsinha.info"
*  issuer: C=US; O=Google Trust Services LLC; CN=GTS CA 1D4
*  SSL certificate verify ok.
* Using HTTP2, server supports multi-use
* Connection state changed (HTTP/2 confirmed)
* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0
* Using Stream ID: 1 (easy handle 0x55f650484860)
> GET / HTTP/2
> Host: sara1-ingress.rahulsinha.info
> user-agent: curl/7.68.0
> accept: */*
>
* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
* old SSL session ID is stale, removing
* Connection state changed (MAX_CONCURRENT_STREAMS == 100)!
< HTTP/2 200
< server: nginx/1.17.10
< date: Thu, 21 Sep 2023 22:21:25 GMT
< content-type: text/html
< content-length: 612
< last-modified: Tue, 14 Apr 2020 14:19:26 GMT
< etag: "5e95c66e-264"
< accept-ranges: bytes
< via: 1.1 google
< alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
<
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
* Connection #0 to host sara1-ingress.rahulsinha.info left intact
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl https://sara1-ingress.rahulsinha.info/
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl https://sara1-ingress.rahulsinha.info/app1
<html>
<head><title>301 Moved Permanently</title></head>
<body>
<center><h1>301 Moved Permanently</h1></center>
<hr><center>nginx/1.17.10</center>
</body>
</html>
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl https://sara1-ingress.rahulsinha.info/app1/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(228, 250, 210);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App1</p>
   </body>
</html>simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ curl -v https://sara1-ingress.rahulsinha.info/app1/
*   Trying 34.36.100.7:443...
* TCP_NODELAY set
* Connected to sara1-ingress.rahulsinha.info (34.36.100.7) port 443 (#0)
* ALPN, offering h2
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: /etc/ssl/certs/ca-certificates.crt
  CApath: /etc/ssl/certs
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
* TLSv1.3 (IN), TLS handshake, Server hello (2):
* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
* TLSv1.3 (IN), TLS handshake, Certificate (11):
* TLSv1.3 (IN), TLS handshake, CERT verify (15):
* TLSv1.3 (IN), TLS handshake, Finished (20):
* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
* TLSv1.3 (OUT), TLS handshake, Finished (20):
* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384
* ALPN, server accepted to use h2
* Server certificate:
*  subject: CN=sara-ingress.rahulsinha.info
*  start date: Sep 21 21:06:40 2023 GMT
*  expire date: Dec 20 21:56:31 2023 GMT
*  subjectAltName: host "sara1-ingress.rahulsinha.info" matched cert's "sara1-ingress.rahulsinha.info"
*  issuer: C=US; O=Google Trust Services LLC; CN=GTS CA 1D4
*  SSL certificate verify ok.
* Using HTTP2, server supports multi-use
* Connection state changed (HTTP/2 confirmed)
* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0
* Using Stream ID: 1 (easy handle 0x56290cf0c860)
> GET /app1/ HTTP/2
> Host: sara1-ingress.rahulsinha.info
> user-agent: curl/7.68.0
> accept: */*
>
* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
* old SSL session ID is stale, removing
* Connection state changed (MAX_CONCURRENT_STREAMS == 100)!
< HTTP/2 200
< server: nginx/1.17.10
< date: Thu, 21 Sep 2023 22:22:10 GMT
< content-type: text/html
< content-length: 173
< last-modified: Thu, 28 May 2020 05:01:35 GMT
< etag: "5ecf45af-ad"
< accept-ranges: bytes
< via: 1.1 google
< alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
<
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(228, 250, 210);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App1</p>
   </body>
* Connection #0 to host sara1-ingress.rahulsinha.info left intact
</html>simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/45-GKE-Ingress-NameBasedVhost-Routing$ kubectl


kubectl -n external-dns-ns logs -f $(kubectl -n external-dns-ns get po | egrep -o 'external-dns[A-Za-z0-9-]+')

time="2023-09-21T21:54:52Z" level=info msg="All records are already up to date"
time="2023-09-21T21:55:53Z" level=info msg="All records are already up to date"
time="2023-09-21T21:56:53Z" level=info msg="All records are already up to date"
time="2023-09-21T21:57:54Z" level=info msg="All records are already up to date"
time="2023-09-21T21:58:54Z" level=info msg="Change zone: rahulsinha-info batch #0"
time="2023-09-21T21:58:54Z" level=info msg="Add records: a-sara-ingress.rahulsinha.info. TXT [\"heritage=external-dns,external-dns/owner=default,external-dns/resource=ingress/default/ingress-namebasedvhost-routing\"] 300"
time="2023-09-21T21:58:54Z" level=info msg="Add records: a-sara1-ingress.rahulsinha.info. TXT [\"heritage=external-dns,external-dns/owner=default,external-dns/resource=ingress/default/ingress-namebasedvhost-routing\"] 300"
time="2023-09-21T21:58:54Z" level=info msg="Add records: a-sara2-ingress.rahulsinha.info. TXT [\"heritage=external-dns,external-dns/owner=default,external-dns/resource=ingress/default/ingress-namebasedvhost-routing\"] 300"
time="2023-09-21T21:58:54Z" level=info msg="Add records: sara-ingress.rahulsinha.info. A [34.36.100.7] 300"
time="2023-09-21T21:58:54Z" level=info msg="Add records: sara-ingress.rahulsinha.info. TXT [\"heritage=external-dns,external-dns/owner=default,external-dns/resource=ingress/default/ingress-namebasedvhost-routing\"] 300"
time="2023-09-21T21:58:54Z" level=info msg="Add records: sara1-ingress.rahulsinha.info. A [34.36.100.7] 300"
time="2023-09-21T21:58:54Z" level=info msg="Add records: sara1-ingress.rahulsinha.info. TXT [\"heritage=external-dns,external-dns/owner=default,external-dns/resource=ingress/default/ingress-namebasedvhost-routing\"] 300"
time="2023-09-21T21:58:54Z" level=info msg="Add records: sara2-ingress.rahulsinha.info. A [34.36.100.7] 300"
time="2023-09-21T21:58:54Z" level=info msg="Add records: sara2-ingress.rahulsinha.info. TXT [\"heritage=external-dns,external-dns/owner=default,external-dns/resource=ingress/default/ingress-namebasedvhost-routing\"] 300"
time="2023-09-21T21:59:55Z" level=info msg="All records are already up to date"
time="2023-09-21T22:00:55Z" level=info msg="All records are already up to date"
time="2023-09-21T22:01:56Z" level=info msg="All records are already up to date"
time="2023-09-21T22:02:57Z" level=info msg="All records are already up to date"
time="2023-09-21T22:03:58Z" level=info msg="All records are already up to date"
