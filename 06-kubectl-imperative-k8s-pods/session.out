---
title: Kubernetes PODs
description: Learn about Kubernetes Pods
---

## Step-01: PODs Introduction
- What is a POD ?
- What is a Multi-Container POD?

## Step-02: PODs Demo
### Step-02-01: Get Worker Nodes Status
- Verify if kubernetes worker nodes are ready. 
```t
# Configure kubeconfig for kubectl
gcloud container clusters get-credentials <CLUSTER-NAME> --region <REGION> --project <PROJECT-NAME>
gcloud container clusters get-credentials standard-public-cluster-1 --region us-central1 --project kdaida123

# Get Worker Node Status
kubectl get nodes

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get nodes
NAME                                                  STATUS   ROLES    AGE     VERSION
gke-gke-public-standard--default-pool-0bc48b90-3jtt   Ready    <none>   13h     v1.27.3-gke.1700
gke-gke-public-standard--default-pool-175a9d00-v6mb   Ready    <none>   3d3h    v1.27.3-gke.1700
gke-gke-public-standard--default-pool-73297d2f-pgnk   Ready    <none>   7h31m   v1.27.3-gke.1700

# Get Worker Node Status with wide option
kubectl get nodes -o wide

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get nodes -o wide
NAME                                                  STATUS   ROLES    AGE     VERSION            INTERNAL-IP   EXTERNAL-IP      OS-IMAGE             KERNEL-VERSION    CONTAINER-RUNTIME
gke-gke-public-standard--default-pool-0bc48b90-3jtt   Ready    <none>   13h     v1.27.3-gke.1700   10.128.0.29   34.122.218.118   Ubuntu 22.04.2 LTS   5.15.0-1037-gke   containerd://1.7.0
gke-gke-public-standard--default-pool-175a9d00-v6mb   Ready    <none>   3d3h    v1.27.3-gke.1700   10.128.0.25   34.123.216.198   Ubuntu 22.04.2 LTS   5.15.0-1037-gke   containerd://1.7.0
gke-gke-public-standard--default-pool-73297d2f-pgnk   Ready    <none>   7h32m   v1.27.3-gke.1700   10.128.0.31   34.70.73.230     Ubuntu 22.04.2 LTS   5.15.0-1037-gke   containerd://1.7.0

```

### Step-02-02:  Create a Pod
- Create a Pod
```t
# Template
kubectl run <desired-pod-name> --image <Container-Image> 

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl run webserver-1 --image nginx
pod/webserver-1 created
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get pods
NAME          READY   STATUS              RESTARTS   AGE
webserver-1   0/1     ContainerCreating   0          4s
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl logs -f webserver-1
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2023/08/18 04:02:28 [notice] 1#1: using the "epoll" event method
2023/08/18 04:02:28 [notice] 1#1: nginx/1.25.2
2023/08/18 04:02:28 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14)
2023/08/18 04:02:28 [notice] 1#1: OS: Linux 5.15.0-1037-gke
2023/08/18 04:02:28 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2023/08/18 04:02:28 [notice] 1#1: start worker processes
2023/08/18 04:02:28 [notice] 1#1: start worker process 30
2023/08/18 04:02:28 [notice] 1#1: start worker process 31




# Replace Pod Name, Container Image
kubectl run my-first-pod --image stacksimplify/kubenginx:1.0.0


rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl run my-first-pod --image stacksimplify/kubenginx:1.0.0
pod/my-first-pod created
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get pods
NAME           READY   STATUS              RESTARTS   AGE
my-first-pod   0/1     ContainerCreating   0          3s
webserver-1    1/1     Running             0          67s
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get pods
NAME           READY   STATUS    RESTARTS   AGE
my-first-pod   1/1     Running   0          24s
webserver-1    1/1     Running   0          88s
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl describe pod my-first-pod
Name:             my-first-pod
Namespace:        default
Priority:         0
Service Account:  default
Node:             gke-gke-public-standard--default-pool-73297d2f-pgnk/10.128.0.31
Start Time:       Fri, 18 Aug 2023 12:03:25 +0800
Labels:           run=my-first-pod
Annotations:      <none>
Status:           Running
IP:               10.56.0.6
IPs:
  IP:  10.56.0.6
Containers:
  my-first-pod:
    Container ID:   containerd://3ab44d145350345782bcb0c7a652cadb93fe5d9431ee7e93943b93164089cd9e
    Image:          stacksimplify/kubenginx:1.0.0
    Image ID:       docker.io/stacksimplify/kubenginx@sha256:205961b09a80476af4c2379841bf6abec0022101a7e6c5585a88316f7115d17a
.....

```  

### Step-02-03: List Pods
- Get the list of pods
```t
# List Pods
kubectl get pods

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get pods
NAME           READY   STATUS    RESTARTS   AGE
my-first-pod   1/1     Running   0          2m11s
webserver-1    1/1     Running   0          3m15s


# Alias name for pods is po
kubectl get po


rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get po
NAME           READY   STATUS    RESTARTS   AGE
my-first-pod   1/1     Running   0          2m15s
webserver-1    1/1     Running   0          3m19s

```

### Step-02-04: List Pods with wide option
- List pods with wide option which also provide Node information on which Pod is running
```t
# List Pods with Wide Option
kubectl get pods -o wide

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get po -o wide
NAME           READY   STATUS    RESTARTS   AGE     IP          NODE                                                  NOMINATED NODE   READINESS GATES
my-first-pod   1/1     Running   0          2m31s   10.56.0.6   gke-gke-public-standard--default-pool-73297d2f-pgnk   <none>           <none>
webserver-1    1/1     Running   0          3m35s   10.56.0.5   gke-gke-public-standard--default-pool-73297d2f-pgnk   <none>           <none>


```

### Step-02-05: What happened in the backgroup when above command is run?
1. Kubernetes created a pod
2. Pulled the docker image from docker hub
3. Created the container in the pod
4. Started the container present in the pod

### Step-02-06: Describe Pod
- Describe the POD, primarily required during troubleshooting. 
- Events shown will be of a great help during troubleshooting. 
```t
# To get list of pod names
kubectl get pods

# Describe the Pod
kubectl describe pod <Pod-Name>
kubectl describe pod my-first-pod 
Observation:
1. Review Events - thats the key for troubleshooting, understanding what happened
```

### Step-02-07: Access Application
- Currently we can access this application only inside worker nodes. 
- To access it externally, we need to create a **NodePort or Load Balancer Service**. 
- **Services** is one very very important concept in Kubernetes. 

### Step-02-08: Delete Pod
```t
# To get list of pod names
kubectl get pods

# Delete Pod
kubectl delete pod <Pod-Name>
kubectl delete pod my-first-pod

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl delete pods webserver-1 my-first-pod
pod "webserver-1" deleted
pod "my-first-pod" deleted


```

## Step-03: Load Balancer Service Introduction
- What are Services in k8s?
- What is a Load Balancer Service?
- How it works?

## Step-04: Demo - Expose Pod with a Service
- Expose pod with a service (Load Balancer Service) to access the application externally (from internet)
- **Ports**
  - **port:** Port on which node port service listens in Kubernetes cluster internally
  - **targetPort:** We define container port here on which our application is running.
- Verify the following before LB Service creation
  - Azure Standard Load Balancer created for Azure AKS Cluster
    - Frontend IP Configuration
    - Load Balancing Rules
  - Azure Public IP 
```t
# Create  a Pod
kubectl run <desired-pod-name> --image <Container-Image> 
kubectl run my-first-pod --image stacksimplify/kubenginx:1.0.0 

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl run my-first-pod --image stacksimplify/kubenginx:1.0.0
pod/my-first-pod created

# Expose Pod as a Service
kubectl expose pod <Pod-Name>  --type=LoadBalancer --port=80 --name=<Service-Name>
kubectl expose pod my-first-pod  --type=LoadBalancer --port=80 --name=my-first-service


rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl expose pod my-first-pod  --type=LoadBalancer --port=80 --name=my-first-service
service/my-first-service exposed

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl expose pod my-first-pod  --type=LoadBalancer --port=8080 --target-port=80 --name=my-first-se
rvice-8080
service/my-first-service-8080 exposed

# Get Service Info
kubectl get service
kubectl get svc
Observation:
1. Initially External-IP will show as pending and slowly it will get the external-ip assigned and displayed.
2. It will take 2 to 3 minutes to get the external-ip listed

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get svc
NAME                    TYPE           CLUSTER-IP     EXTERNAL-IP      PORT(S)          AGE
kubernetes              ClusterIP      10.60.0.1      <none>           443/TCP          8d
my-first-service        LoadBalancer   10.60.11.101   35.223.139.174   80:32295/TCP     4m51s
my-first-service-8080   LoadBalancer   10.60.3.117    34.67.233.127    8080:31139/TCP   91s
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get svc -o wide
NAME                    TYPE           CLUSTER-IP     EXTERNAL-IP      PORT(S)          AGE     SELECTOR
kubernetes              ClusterIP      10.60.0.1      <none>           443/TCP          8d      <none>
my-first-service        LoadBalancer   10.60.11.101   35.223.139.174   80:32295/TCP     4m54s   run=my-first-pod
my-first-service-8080   LoadBalancer   10.60.3.117    34.67.233.127    8080:31139/TCP   94s     run=my-first-pod
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$


# Describe Service
kubectl describe service my-first-service

# Access Application
http://<External-IP-from-get-service-output>
curl http://<External-IP-from-get-service-output>
```
- Verify the following after LB Service creation
- Google Load Balancer created, verify it. 
  - Verify Backends 
  - Verify Frontends
- Verify **Workloads and Services** on Google GKE Dashboard GCP Console


rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl describe svc my-first-service
Name:                     my-first-service
Namespace:                default
Labels:                   run=my-first-pod
Annotations:              cloud.google.com/neg: {"ingress":true}
Selector:                 run=my-first-pod
Type:                     LoadBalancer
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.60.11.101
IPs:                      10.60.11.101
LoadBalancer Ingress:     35.223.139.174
Port:                     <unset>  80/TCP
TargetPort:               80/TCP
NodePort:                 <unset>  32295/TCP
Endpoints:                10.56.0.7:80
Session Affinity:         None
External Traffic Policy:  Cluster
Events:
  Type    Reason                Age    From                Message
  ----    ------                ----   ----                -------
  Normal  EnsuringLoadBalancer  5m34s  service-controller  Ensuring load balancer
  Normal  EnsuredLoadBalancer   4m54s  service-controller  Ensured load balancer
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl describe svc my-first-service-8080
Name:                     my-first-service-8080
Namespace:                default
Labels:                   run=my-first-pod
Annotations:              cloud.google.com/neg: {"ingress":true}
Selector:                 run=my-first-pod
Type:                     LoadBalancer
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.60.3.117
IPs:                      10.60.3.117
LoadBalancer Ingress:     34.67.233.127
Port:                     <unset>  8080/TCP
TargetPort:               80/TCP
NodePort:                 <unset>  31139/TCP
Endpoints:                10.56.0.7:80
Session Affinity:         None
External Traffic Policy:  Cluster
Events:
  Type    Reason                Age    From                Message
  ----    ------                ----   ----                -------
  Normal  EnsuringLoadBalancer  2m20s  service-controller  Ensuring load balancer
  Normal  EnsuredLoadBalancer   106s   service-controller  Ensured load balancer
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$


## Step-05: Interact with a Pod
### Step-05-01: Verify Pod Logs
```t
# Get Pod Name
kubectl get po

# Dump Pod logs
kubectl logs <pod-name>
kubectl logs my-first-pod

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl logs my-first-pod
10.128.0.29 - - [18/Aug/2023:05:42:11 +0000] "CONNECT google.com:443 HTTP/1.1" 400 158 "-" "-" "-"
141.98.11.44 - - [18/Aug/2023:05:45:01 +0000] "GET / HTTP/1.1" 200 218 "-" "Mozilla/5.0 (Windows NT 5.1; rv:9.0.1) Gecko/20100101 Firefox/9.0.1" "-"
10.128.0.29 - - [18/Aug/2023:05:45:06 +0000] "CONNECT google.com:443 HTTP/1.1" 400 158 "-" "-" "-"
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$


# Stream pod logs with -f option and access application to see logs
kubectl logs <pod-name>
kubectl logs -f my-first-pod


rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl logs -f my-first-pod
10.128.0.29 - - [18/Aug/2023:05:42:11 +0000] "CONNECT google.com:443 HTTP/1.1" 400 158 "-" "-" "-"
141.98.11.44 - - [18/Aug/2023:05:45:01 +0000] "GET / HTTP/1.1" 200 218 "-" "Mozilla/5.0 (Windows NT 5.1; rv:9.0.1) Gecko/20100101 Firefox/9.0.1" "-"
10.128.0.29 - - [18/Aug/2023:05:45:06 +0000] "CONNECT google.com:443 HTTP/1.1" 400 158 "-" "-" "-"
103.252.203.106 - - [18/Aug/2023:05:45:51 +0000] "GET / HTTP/1.1" 200 218 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 Edg/115.0.1901.203" "-"
2023/08/18 05:45:51 [error] 7#7: *6 open() "/usr/share/nginx/html/favicon.ico" failed (2: No such file or directory), client: 103.252.203.106, server: localhost, request: "GET /favicon.ico HTTP/1.1", host: "35.223.139.174", referrer: "http://35.223.139.174/"
103.252.203.106 - - [18/Aug/2023:05:45:51 +0000] "GET /favicon.ico HTTP/1.1" 404 556 "http://35.223.139.174/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 Edg/115.0.1901.203" "-"


103.252.203.106 - - [18/Aug/2023:05:46:09 +0000] "GET / HTTP/1.1" 200 218 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 Edg/115.0.1901.203" "-"
2023/08/18 05:46:10 [error] 7#7: *7 open() "/usr/share/nginx/html/favicon.ico" failed (2: No such file or directory), client: 103.252.203.106, server: localhost, request: "GET /favicon.ico HTTP/1.1", host: "34.67.233.127:8080", referrer: "http://34.67.233.127:8080/"
103.252.203.106 - - [18/Aug/2023:05:46:10 +0000] "GET /favicon.ico HTTP/1.1" 404 556 "http://34.67.233.127:8080/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 Edg/115.0.1901.203" "-"

^C
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$


```
- **Important Notes**
- Refer below link and search for **Interacting with running Pods** for additional log options
- Troubleshooting skills are very important. So please go through all logging options available and master them.
- **Reference:** https://kubernetes.io/docs/reference/kubectl/cheatsheet/

### Step-05-02: Connect to a Container in POD and execute command
```t
# Connect to Nginx Container in a POD
kubectl exec -it <pod-name> -- /bin/bash
kubectl exec -it my-first-pod -- /bin/bash

# Execute some commands in Nginx container
ls
cd /usr/share/nginx/html
cat index.html
exit

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl exec -it my-first-pod -- /bin/bash
root@my-first-pod:/# cd /usr/share/nginx/html/
root@my-first-pod:/usr/share/nginx/html# cat index.html
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>root@my-first-pod:/usr/share/nginx/html# exit
exit
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$

```
### Step-05-03: Running individual commands in a Container
```t
# Template
kubectl exec -it <pod-name> -- <COMMAND>

# Sample Commands
kubectl exec -it my-first-pod -- env
kubectl exec -it my-first-pod -- ls
kubectl exec -it my-first-pod -- cat /usr/share/nginx/html/index.html


rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl exec -it my-first-pod -- env
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=my-first-pod
NGINX_VERSION=1.17.10
NJS_VERSION=0.3.9
PKG_RELEASE=1~buster
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT=tcp://10.60.0.1:443
KUBERNETES_PORT_443_TCP=tcp://10.60.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_PORT=443
KUBERNETES_PORT_443_TCP_ADDR=10.60.0.1
KUBERNETES_SERVICE_HOST=10.60.0.1
KUBERNETES_SERVICE_PORT=443
TERM=xterm
HOME=/root
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl exec -it my-first-pod -- ls
bin   dev  home  lib64  mnt  proc  run   srv  tmp  var
boot  etc  lib   media  opt  root  sbin  sys  usr
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl exec -it my-first-pod -- cat /usr/share/nginx/html/index.html
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$


```

## Step-06: Get YAML Output of Pod & Service
### Get YAML Output
```t
# Get pod definition YAML output
kubectl get pod my-first-pod -o yaml   

</html>rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get pods -o yaml
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-18T05:36:38Z"
    labels:
      run: my-first-pod
    name: my-first-pod
    namespace: default
...


# Get service definition YAML output
kubectl get service my-first-service -o yaml   

</html>rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get pods -o yaml
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-18T05:36:38Z"
    labels:
      run: my-first-pod
    name: my-first-pod
    namespace: default
...

```

## Step-07: Clean-Up
```t
# Get all Objects in default namespace
kubectl get all

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get all
NAME               READY   STATUS    RESTARTS   AGE
pod/my-first-pod   1/1     Running   0          21m

NAME                            TYPE           CLUSTER-IP     EXTERNAL-IP      PORT(S)          AGE
service/kubernetes              ClusterIP      10.60.0.1      <none>           443/TCP          8d
service/my-first-service        LoadBalancer   10.60.11.101   35.223.139.174   80:32295/TCP     20m
service/my-first-service-8080   LoadBalancer   10.60.3.117    34.67.233.127    8080:31139/TCP   17m
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ 

# Delete Services
kubectl delete svc my-first-service

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl delete svc my-first-service my-first-service-8080
service "my-first-service" deleted
service "my-first-service-8080" deleted

# Delete Pod
kubectl delete pod my-first-pod

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl delete pods my-first-pod
pod "my-first-pod" deleted

# Get all Objects in default namespace
kubectl get all

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl get all
NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.60.0.1    <none>        443/TCP   8d
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$

```


## LOGS - More Options

```t
# Return snapshot logs from pod nginx with only one container
kubectl logs nginx

# Return snapshot of previous terminated ruby container logs from pod web-1
kubectl logs -p -c ruby web-1

# Begin streaming the logs of the ruby container in pod web-1
kubectl logs -f -c ruby web-1

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl logs -f --tail=2 -c my-first-pod my-first-pod
10.128.0.25 - - [18/Aug/2023:05:49:28 +0000] "GET / HTTP/1.1" 200 218 "-" "Linux Gnu (cow)" "-"
103.252.203.106 - - [18/Aug/2023:05:53:26 +0000] "GET / HTTP/1.1" 304 0 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 Edg/115.0.1901.203" "-"
--
10.128.0.29 - - [18/Aug/2023:05:56:43 +0000] "GET / HTTP/1.1" 304 0 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 Edg/115.0.1901.203" "-"



# Display only the most recent 20 lines of output in pod nginx
kubectl logs --tail=20 nginx

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl logs -f --tail=5 my-first-pod
2023/08/18 05:48:19 [error] 7#7: *12 open() "/usr/share/nginx/html/robots.txt" failed (2: No such file or directory), client: 10.128.0.25, server: localhost, request: "GET /robots.txt HTTP/1.1", host: "35.223.139.174"
10.128.0.25 - - [18/Aug/2023:05:48:19 +0000] "GET /robots.txt HTTP/1.1" 404 556 "-" "Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm) Chrome/103.0.5060.134 Safari/537.36" "-"
10.128.0.25 - - [18/Aug/2023:05:48:20 +0000] "GET / HTTP/1.1" 200 218 "-" "Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm) Chrome/103.0.5060.134 Safari/537.36" "-"
10.128.0.29 - - [18/Aug/2023:05:48:26 +0000] "GET / HTTP/1.1" 200 218 "-" "Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm) Chrome/103.0.5060.134 Safari/537.36" "-"
10.128.0.25 - - [18/Aug/2023:05:49:28 +0000] "GET / HTTP/1.1" 200 218 "-" "Linux Gnu (cow)" "-"


--

103.252.203.106 - - [18/Aug/2023:05:53:26 +0000] "GET / HTTP/1.1" 304 0 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 Edg/115.0.1901.203" "-"


# Show all logs from pod nginx written in the last hour
kubectl logs --since=1h nginx

rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$ kubectl logs --since=1m my-first-pod
103.252.203.106 - - [18/Aug/2023:05:53:26 +0000] "GET / HTTP/1.1" 304 0 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 Edg/115.0.1901.203" "-"
rahul@DESKTOP-C4GRDQ2:~/github/google-kubernetes-engine/06-kubectl-imperative-k8s-pods$

```
