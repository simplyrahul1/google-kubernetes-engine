simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ ls
01-kube-manifests  02-kube-manifests-curl  README.md
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ ls 01-kube-manifests/
01-Nginx-App1-Deployment-and-NodePortService.yaml  02-Nginx-App2-Deployment-and-NodePortService.yaml  03-Nginx-App3-Deployment-and-NodePortService.yaml  04-Ingress-internal-lb.yaml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ cat 01-kube-manifests/01-Nginx-App1-Deployment-and-NodePortService.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1-nginx-deployment
  labels:
    app: app1-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1-nginx
  template:
    metadata:
      labels:
        app: app1-nginx
    spec:
      containers:
        - name: app1-nginx
          image: stacksimplify/kube-nginxapp1:1.0.0
          ports:
            - containerPort: 80
          # Readiness Probe (https://cloud.google.com/kubernetes-engine/docs/concepts/ingress#def_inf_hc)
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /app1/index.html
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: app1-nginx-nodeport-service
  labels:
    app: app1-nginx
  annotations:
spec:
  type: NodePort
  selector:
    app: app1-nginx
  ports:
    - port: 80
      targetPort: 80

   simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ cat 01-kube-manifests/02-Nginx-App2-Deployment-and-NodePortService.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2-nginx-deployment
  labels:
    app: app2-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app2-nginx
  template:
    metadata:
      labels:
        app: app2-nginx
    spec:
      containers:
        - name: app2-nginx
          image: stacksimplify/kube-nginxapp2:1.0.0
          ports:
            - containerPort: 80
          # Readiness Probe (https://cloud.google.com/kubernetes-engine/docs/concepts/ingress#def_inf_hc)
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /app2/index.html
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: app2-nginx-nodeport-service
  labels:
    app: app2-nginx
  annotations:
spec:
  type: NodePort
  selector:
    app: app2-nginx
  ports:
    - port: 80
      targetPort: 80

   simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ cat 01-kube-manifests/03-Nginx-App3-Deployment-and-NodePortService.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app3-nginx-deployment
  labels:
    app: app3-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app3-nginx
  template:
    metadata:
      labels:
        app: app3-nginx
    spec:
      containers:
        - name: app3-nginx
          image: stacksimplify/kubenginx:1.0.0
          ports:
            - containerPort: 80
          # Readiness Probe (https://cloud.google.com/kubernetes-engine/docs/concepts/ingress#def_inf_hc)
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /index.html
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: app3-nginx-nodeport-service
  labels:
    app: app3-nginx
  annotations:
spec:
  type: NodePort
  selector:
    app: app3-nginx
  ports:
    - port: 80
      targetPort: 80simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ cat 01-kube-manifests/04-Ingress-internal-lb.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-internal-lb
  annotations:
    # If the class annotation is not specified it defaults to "gce".
    # gce: external load balancer
    # gce-internal: internal load balancer
    # Internal Load Balancer
    kubernetes.io/ingress.class: "gce-internal"
spec:
  defaultBackend:
    service:
      name: app3-nginx-nodeport-service
      port:
        number: 80
  rules:
    - http:
        paths:
          - path: /app1
            pathType: Prefix
            backend:
              service:
                name: app1-nginx-nodeport-service
                port:
                  number: 80
          - path: /app2
            pathType: Prefix
            backend:
              service:
                name: app2-nginx-nodeport-service
                port:
                  number: 80


    simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-Internalls 01-kube-manifests/
01-Nginx-App1-Deployment-and-NodePortService.yaml  02-Nginx-App2-Deployment-and-NodePortService.yaml  03-Nginx-App3-Deployment-and-NodePortService.yaml  04-Ingress-internal-lb.yaml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl apply -f 01-kube-manifests/
deployment.apps/app1-nginx-deployment created
service/app1-nginx-nodeport-service created
deployment.apps/app2-nginx-deployment created
service/app2-nginx-nodeport-service created
deployment.apps/app3-nginx-deployment created
service/app3-nginx-nodeport-service created
Warning: annotation "kubernetes.io/ingress.class" is deprecated, please use 'spec.ingressClassName' instead
ingress.networking.k8s.io/ingress-internal-lb created
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ for i in deploy pods svc ingress backendconfig ; do echo "kubectl get ${i} -o wide --show-labels" && kubectl get ${i} -o wide --show-labels && echo "" ; done
kubectl get deploy -o wide --show-labels
NAME                    READY   UP-TO-DATE   AVAILABLE   AGE   CONTAINERS   IMAGES                               SELECTOR         LABELS
app1-nginx-deployment   1/1     1            1           41s   app1-nginx   stacksimplify/kube-nginxapp1:1.0.0   app=app1-nginx   app=app1-nginx
app2-nginx-deployment   1/1     1            1           40s   app2-nginx   stacksimplify/kube-nginxapp2:1.0.0   app=app2-nginx   app=app2-nginx
app3-nginx-deployment   1/1     1            1           39s   app3-nginx   stacksimplify/kubenginx:1.0.0        app=app3-nginx   app=app3-nginx

kubectl get pods -o wide --show-labels
NAME                                     READY   STATUS    RESTARTS   AGE   IP            NODE                                                  NOMINATED NODE   READINESS GATES   LABELS
app1-nginx-deployment-544dfb8c8f-cz55l   1/1     Running   0          44s   10.76.0.27    gke-private-standard-22a-default-pool-b8a9f9fd-1hff   <none>           <none>            app=app1-nginx,pod-template-hash=544dfb8c8f
app2-nginx-deployment-7c46c8bb8c-rqxz2   1/1     Running   0          43s   10.76.1.175   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app=app2-nginx,pod-template-hash=7c46c8bb8c
app3-nginx-deployment-5778df6d5f-r2gzr   1/1     Running   0          42s   10.76.1.176   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app=app3-nginx,pod-template-hash=5778df6d5f

kubectl get svc -o wide --show-labels
NAME                          TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE   SELECTOR         LABELS
app1-nginx-nodeport-service   NodePort    10.80.12.169   <none>        80:31085/TCP   47s   app=app1-nginx   app=app1-nginx
app2-nginx-nodeport-service   NodePort    10.80.4.56     <none>        80:31323/TCP   46s   app=app2-nginx   app=app2-nginx
app3-nginx-nodeport-service   NodePort    10.80.11.238   <none>        80:32529/TCP   45s   app=app3-nginx   app=app3-nginx
kubernetes                    ClusterIP   10.80.0.1      <none>        443/TCP        47d   <none>           component=apiserver,provider=kubernetes

kubectl get ingress -o wide --show-labels
NAME                  CLASS    HOSTS   ADDRESS   PORTS   AGE   LABELS
ingress-internal-lb   <none>   *                 80      48s   <none>

kubectl get backendconfig -o wide --show-labels
No resources found in default namespace.

simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl describe ingress ingress-internal-lb
Name:             ingress-internal-lb
Labels:           <none>
Namespace:        default
Address:
Ingress Class:    <none>
Default backend:  app3-nginx-nodeport-service:80 (10.76.1.176:80)
Rules:
  Host        Path  Backends
  ----        ----  --------
  *
              /app1   app1-nginx-nodeport-service:80 (10.76.0.27:80)
              /app2   app2-nginx-nodeport-service:80 (10.76.1.175:80)
Annotations:  kubernetes.io/ingress.class: gce-internal
Events:
  Type    Reason  Age                From                     Message
  ----    ------  ----               ----                     -------
  Normal  Sync    77s (x2 over 77s)  loadbalancer-controller  Scheduled for sync
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$
(reverse-i-search)`curl': ^Crl http://34.36.8.236/
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ ls
01-kube-manifests  02-kube-manifests-curl  README.md
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ ls 02-kube-manifests-curl/
01-curl-pod.yml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ cat 02-kube-manifests-curl/01-curl-pod.yml
apiVersion: v1
kind: Pod
metadata:
  name: curl-pod
spec:
  containers:
  - name: curl
    image: curlimages/curl
    command: [ "sleep", "600" ]simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl apply -f 02-kube-manifests-curl/01-curl-pod.yml
pod/curl-pod created
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl get pods
NAME                                     READY   STATUS    RESTARTS   AGE
app1-nginx-deployment-544dfb8c8f-cz55l   1/1     Running   0          3m43s
app2-nginx-deployment-7c46c8bb8c-rqxz2   1/1     Running   0          3m42s
app3-nginx-deployment-5778df6d5f-r2gzr   1/1     Running   0          3m41s
curl-pod                                 1/1     Running   0          19s
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl exec -it curl-pod bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
error: Internal error occurred: error executing command in container: failed to exec in container: failed to start exec "695f7d13b52aed4355ec04df28a35afe6d3a5b835335ebe350bc006c0a635335": OCI runtime exec failed: exec failed: unable to start container process: exec: "bash": executable file not found in $PATH: unknown
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl exec -it curl-pod -- bash
error: Internal error occurred: error executing command in container: failed to exec in container: failed to start exec "172b064bf7f4ff5b172eac73c8c5cc693ee2af29e8c0817cba0c28cfb0428fc0": OCI runtime exec failed: exec failed: unable to start container process: exec: "bash": executable file not found in $PATH: unknown
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl exec -it curl-pod -- /bin/bash
error: Internal error occurred: error executing command in container: failed to exec in container: failed to start exec "1163976a37e6797209cdb6c550b190600dbcd46a16a35412f3d242c9458cada7": OCI runtime exec failed: exec failed: unable to start container process: exec: "/bin/bash": stat /bin/bash: no such file or directory: unknown
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl exec -it curl-pod -- /bin/sh
~ $ curl http://10.76.1.176
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>~ $
~ $
~ $ curl http://10.76.0.27/app1/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(228, 250, 210);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App1</p>
   </body>
</html>~ $
~ $
~ $ curl http://10.76.1.175/app2/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(221, 210, 250);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App2</p>
   </body>
</html>~ $
~ $ nslookup app3-nginx-nodeport-service
Server:         10.80.0.10
Address:        10.80.0.10:53

** server can't find app3-nginx-nodeport-service.svc.cluster.local: NXDOMAIN

** server can't find app3-nginx-nodeport-service.cluster.local: NXDOMAIN

** server can't find app3-nginx-nodeport-service.cluster.local: NXDOMAIN

** server can't find app3-nginx-nodeport-service.us-central1-b.c.expanded-origin-395402.internal: NXDOMAIN

Name:   app3-nginx-nodeport-service.default.svc.cluster.local
Address: 10.80.11.238


** server can't find app3-nginx-nodeport-service.svc.cluster.local: NXDOMAIN

** server can't find app3-nginx-nodeport-service.us-central1-b.c.expanded-origin-395402.internal: NXDOMAIN

** server can't find app3-nginx-nodeport-service.google.internal: NXDOMAIN

** server can't find app3-nginx-nodeport-service.c.expanded-origin-395402.internal: NXDOMAIN

** server can't find app3-nginx-nodeport-service.c.expanded-origin-395402.internal: NXDOMAIN

** server can't find app3-nginx-nodeport-service.google.internal: NXDOMAIN

~ $ curl http://10.80.11.238
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>~ $
~ $ curl http://app3-nginx-nodeport-service
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>~ $
~ $
~ $ curl http://app1-nginx-nodeport-service/app1/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(228, 250, 210);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App1</p>
   </body>
</html>~ $
~ $
~ $ curl http://app2-nginx-nodeport-service/app2/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(221, 210, 250);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App2</p>
   </body>
</html>~ $
~ $
~ $
~ $ exit
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl describe ingress ingress-internal-lb
Name:             ingress-internal-lb
Labels:           <none>
Namespace:        default
Address:
Ingress Class:    <none>
Default backend:  app3-nginx-nodeport-service:80 (10.76.1.176:80)
Rules:
  Host        Path  Backends
  ----        ----  --------
  *
              /app1   app1-nginx-nodeport-service:80 (10.76.0.27:80)
              /app2   app2-nginx-nodeport-service:80 (10.76.1.175:80)
Annotations:  kubernetes.io/ingress.class: gce-internal
Events:
  Type     Reason  Age                    From                     Message
  ----     ------  ----                   ----                     -------
  Normal   Sync    7m8s                   loadbalancer-controller  UrlMap "k8s2-um-jdj5k2n0-default-ingress-internal-lb-fkzbq0io" created
  Normal   Sync    7m6s                   loadbalancer-controller  TargetProxy "k8s2-tp-jdj5k2n0-default-ingress-internal-lb-fkzbq0io" created
  Normal   Sync    3m48s (x3 over 9m41s)  loadbalancer-controller  Scheduled for sync
  Warning  Sync    76s (x18 over 7m5s)    loadbalancer-controller  Error syncing to GCP: error running load balancer syncing routine: loadbalancer jdj5k2n0-default-ingress-internal-lb-fkzbq0io does not exist: googleapi: Error 400: Invalid value for field 'resource.target': 'https://www.googleapis.com/compute/v1/projects/expanded-origin-395402/regions/us-central1/targetHttpProxies/k8s2-tp-jdj5k2n0-default-ingress-internal-lb-fkzbq0io'. An active proxy-only subnetwork is required in the same region and VPC as the forwarding rule., invalid
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl describe ingress ingress-internal-lb
Name:             ingress-internal-lb
Labels:           <none>
Namespace:        default
Address:
Ingress Class:    <none>
Default backend:  app3-nginx-nodeport-service:80 (10.76.1.176:80)
Rules:
  Host        Path  Backends
  ----        ----  --------
  *
              /app1   app1-nginx-nodeport-service:80 (10.76.0.27:80)
              /app2   app2-nginx-nodeport-service:80 (10.76.1.175:80)
Annotations:  kubernetes.io/ingress.class: gce-internal
Events:
  Type     Reason  Age                   From                     Message
  ----     ------  ----                  ----                     -------
  Normal   Sync    21m                   loadbalancer-controller  UrlMap "k8s2-um-jdj5k2n0-default-ingress-internal-lb-fkzbq0io" created
  Normal   Sync    21m                   loadbalancer-controller  TargetProxy "k8s2-tp-jdj5k2n0-default-ingress-internal-lb-fkzbq0io" created
  Normal   Sync    7m54s (x4 over 23m)   loadbalancer-controller  Scheduled for sync
  Warning  Sync    4m25s (x20 over 21m)  loadbalancer-controller  Error syncing to GCP: error running load balancer syncing routine: loadbalancer jdj5k2n0-default-ingress-internal-lb-fkzbq0io does not exist: googleapi: Error 400: Invalid value for field 'resource.target': 'https://www.googleapis.com/compute/v1/projects/expanded-origin-395402/regions/us-central1/targetHttpProxies/k8s2-tp-jdj5k2n0-default-ingress-internal-lb-fkzbq0io'. An active proxy-only subnetwork is required in the same region and VPC as the forwarding rule., invalid
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ cp /mnt/c/Users/Rahul/Downloads/vpc-network-subnet.png .
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ cp /mnt/c/Users/Rahul/Downloads/gce-internal-loadbalancer-details.png .
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ cp /mnt/c/Users/Rahul/Downloads/app1-internal-loadbalance.png .
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl describe ingress ingress-internal-lb
Name:             ingress-internal-lb
Labels:           <none>
Namespace:        default
Address:
Ingress Class:    <none>
Default backend:  app3-nginx-nodeport-service:80 (10.76.1.176:80)
Rules:
  Host        Path  Backends
  ----        ----  --------
  *
              /app1   app1-nginx-nodeport-service:80 (10.76.0.27:80)
              /app2   app2-nginx-nodeport-service:80 (10.76.1.175:80)
Annotations:  kubernetes.io/ingress.class: gce-internal
Events:
  Type     Reason  Age                   From                     Message
  ----     ------  ----                  ----                     -------
  Normal   Sync    47m                   loadbalancer-controller  UrlMap "k8s2-um-jdj5k2n0-default-ingress-internal-lb-fkzbq0io" created
  Normal   Sync    47m                   loadbalancer-controller  TargetProxy "k8s2-tp-jdj5k2n0-default-ingress-internal-lb-fkzbq0io" created
  Normal   Sync    4m16s (x7 over 50m)   loadbalancer-controller  Scheduled for sync
  Warning  Sync    4m14s (x24 over 47m)  loadbalancer-controller  Error syncing to GCP: error running load balancer syncing routine: loadbalancer jdj5k2n0-default-ingress-internal-lb-fkzbq0io does not exist: googleapi: Error 400: Invalid value for field 'resource.target': 'https://www.googleapis.com/compute/v1/projects/expanded-origin-395402/regions/us-central1/targetHttpProxies/k8s2-tp-jdj5k2n0-default-ingress-internal-lb-fkzbq0io'. An active proxy-only subnetwork is required in the same region and VPC as the forwarding rule., invalid
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl describe ingress ingress-internal-lb
Name:             ingress-internal-lb
Labels:           <none>
Namespace:        default
Address:
Ingress Class:    <none>
Default backend:  app3-nginx-nodeport-service:80 (10.76.1.176:80)
Rules:
  Host        Path  Backends
  ----        ----  --------
  *
              /app1   app1-nginx-nodeport-service:80 (10.76.0.27:80)
              /app2   app2-nginx-nodeport-service:80 (10.76.1.175:80)
Annotations:  kubernetes.io/ingress.class: gce-internal
Events:
  Type     Reason  Age                   From                     Message
  ----     ------  ----                  ----                     -------
  Normal   Sync    47m                   loadbalancer-controller  UrlMap "k8s2-um-jdj5k2n0-default-ingress-internal-lb-fkzbq0io" created
  Normal   Sync    47m                   loadbalancer-controller  TargetProxy "k8s2-tp-jdj5k2n0-default-ingress-internal-lb-fkzbq0io" created
  Normal   Sync    4m30s (x7 over 50m)   loadbalancer-controller  Scheduled for sync
  Warning  Sync    4m28s (x24 over 47m)  loadbalancer-controller  Error syncing to GCP: error running load balancer syncing routine: loadbalancer jdj5k2n0-default-ingress-internal-lb-fkzbq0io does not exist: googleapi: Error 400: Invalid value for field 'resource.target': 'https://www.googleapis.com/compute/v1/projects/expanded-origin-395402/regions/us-central1/targetHttpProxies/k8s2-tp-jdj5k2n0-default-ingress-internal-lb-fkzbq0io'. An active proxy-only subnetwork is required in the same region and VPC as the forwarding rule., invalid
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl exec -it curl-pod -- /bin/bash
error: Internal error occurred: error executing command in container: failed to exec in container: failed to start exec "e21956fcbd02c31a92d660acd48622c00c0ffe9652da5ea6ec258e5186f5524a": OCI runtime exec failed: exec failed: unable to start container process: exec: "/bin/bash": stat /bin/bash: no such file or directory: unknown
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl exec -it curl-pod -- /bin/sh
~ $ curl http://10.128.0.62
^C
~ $ curl http://10.128.0.62/
^C
~ $ exit
command terminated with exit code 130
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ ls
01-kube-manifests  02-kube-manifests-curl  README.md  app1-internal-loadbalance.png  gce-internal-loadbalancer-details.png  vpc-network-subnet.png
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl delete -f 01-kube-manifests/
deployment.apps "app1-nginx-deployment" deleted
service "app1-nginx-nodeport-service" deleted
deployment.apps "app2-nginx-deployment" deleted
service "app2-nginx-nodeport-service" deleted
deployment.apps "app3-nginx-deployment" deleted
service "app3-nginx-nodeport-service" deleted
ingress.networking.k8s.io "ingress-internal-lb" deleted


^Csimplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl delete -f 01-kube-manifests/
ingress.networking.k8s.io "ingress-internal-lb" deleted
Error from server (NotFound): error when deleting "01-kube-manifests/01-Nginx-App1-Deployment-and-NodePortService.yaml": deployments.apps "app1-nginx-deployment" not found
Error from server (NotFound): error when deleting "01-kube-manifests/01-Nginx-App1-Deployment-and-NodePortService.yaml": services "app1-nginx-nodeport-service" not found
Error from server (NotFound): error when deleting "01-kube-manifests/02-Nginx-App2-Deployment-and-NodePortService.yaml": deployments.apps "app2-nginx-deployment" not found
Error from server (NotFound): error when deleting "01-kube-manifests/02-Nginx-App2-Deployment-and-NodePortService.yaml": services "app2-nginx-nodeport-service" not found
Error from server (NotFound): error when deleting "01-kube-manifests/03-Nginx-App3-Deployment-and-NodePortService.yaml": deployments.apps "app3-nginx-deployment" not found
Error from server (NotFound): error when deleting "01-kube-manifests/03-Nginx-App3-Deployment-and-NodePortService.yaml": services "app3-nginx-nodeport-service" not found
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl get pods
NAME       READY   STATUS    RESTARTS         AGE
curl-pod   1/1     Running   13 (5m34s ago)   135m
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl get svc
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.80.0.1    <none>        443/TCP   47d
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ vim 01-kube-manifests/
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ vim 01-kube-manifests/01-Nginx-App1-Deployment-and-NodePortService.yaml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ vim 01-kube-manifests/0
01-Nginx-App1-Deployment-and-NodePortService.yaml  02-Nginx-App2-Deployment-and-NodePortService.yaml  03-Nginx-App3-Deployment-and-NodePortService.yaml  04-Ingress-internal-lb.yaml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ vim 01-kube-manifests/04-Ingress-internal-lb.yaml
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ vim 00-create-proxy-only-subnet.txt
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ gcloud compute networks subnets create proxy-only-subnet \
>     --purpose=REGIONAL_MANAGED_PROXY \
>     --role=ACTIVE \
>     --region=us-central1 \
>     --network=lb-network \
>     --range=10.129.0.0/23
ERROR: (gcloud.compute.networks.subnets.create) Could not fetch resource:
 - The resource 'projects/expanded-origin-395402/global/networks/lb-network' was not found

simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ gcloud compute networks subnets create proxy-only-subnet     --purpose=REGIONAL_MANAGED_PROXY     --role=ACTIVE     --region=us-central1     --network=default     --range=10.129.0.0/23
ERROR: (gcloud.compute.networks.subnets.create) Could not fetch resource:
 - Invalid value for field 'resource.ipCidrRange': '10.129.0.0/23'. Extended subnetworks in auto subnet mode networks cannot overlap with 10.128.0.0/9.

simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ gcloud compute networks subnets create proxy-only-subnet     --purpose=REGIONAL_MANAGED_PROXY     --role=ACTIVE     --region=us-central1     --network=default     --range=192.168.1.0/24
ERROR: (gcloud.compute.networks.subnets.create) Could not fetch resource:
 - The resource 'projects/expanded-origin-395402/regions/us-central1/subnetworks/sara-proxy-only-subnet' already exists

simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl apply -f 01-kube-manifests/
deployment.apps/app1-nginx-deployment created
service/app1-nginx-nodeport-service created
deployment.apps/app2-nginx-deployment created
service/app2-nginx-nodeport-service created
deployment.apps/app3-nginx-deployment created
service/app3-nginx-nodeport-service created
Warning: annotation "kubernetes.io/ingress.class" is deprecated, please use 'spec.ingressClassName' instead
ingress.networking.k8s.io/ingress-internal-lb created
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ for i in deploy pods svc ingress backendconfig ; do echo "kubectl get ${i} -o wide --show-labels" && kubectl get ${i} -o wide --show-labels &
& echo "" ; done
kubectl get deploy -o wide --show-labels
NAME                    READY   UP-TO-DATE   AVAILABLE   AGE   CONTAINERS   IMAGES                               SELECTOR         LABELS
app1-nginx-deployment   1/1     1            1           30s   app1-nginx   stacksimplify/kube-nginxapp1:1.0.0   app=app1-nginx   app=app1-nginx
app2-nginx-deployment   1/1     1            1           29s   app2-nginx   stacksimplify/kube-nginxapp2:1.0.0   app=app2-nginx   app=app2-nginx
app3-nginx-deployment   1/1     1            1           28s   app3-nginx   stacksimplify/kubenginx:1.0.0        app=app3-nginx   app=app3-nginx

kubectl get pods -o wide --show-labels
NAME                                     READY   STATUS    RESTARTS         AGE    IP            NODE                                                  NOMINATED NODE   READINESS GATES   LABELS
app1-nginx-deployment-544dfb8c8f-jfrt2   1/1     Running   0                33s    10.76.0.28    gke-private-standard-22a-default-pool-b8a9f9fd-1hff   <none>           <none>            app=app1-nginx,pod-template-hash=544dfb8c8f
app2-nginx-deployment-7c46c8bb8c-nkd9h   1/1     Running   0                32s    10.76.1.177   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app=app2-nginx,pod-template-hash=7c46c8bb8c
app3-nginx-deployment-5778df6d5f-5cvnd   1/1     Running   0                31s    10.76.1.178   gke-private-standard-22a-default-pool-f62b7b3f-4qbg   <none>           <none>            app=app3-nginx,pod-template-hash=5778df6d5f
curl-pod                                 1/1     Running   15 (6m40s ago)   156m   10.76.2.36    gke-private-standard-22a-default-pool-76d79b51-6f20   <none>           <none>            <none>

kubectl get svc -o wide --show-labels
NAME                          TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE   SELECTOR         LABELS
app1-nginx-nodeport-service   NodePort    10.80.1.64     <none>        80:31531/TCP   36s   app=app1-nginx   app=app1-nginx
app2-nginx-nodeport-service   NodePort    10.80.13.161   <none>        80:32635/TCP   35s   app=app2-nginx   app=app2-nginx
app3-nginx-nodeport-service   NodePort    10.80.14.162   <none>        80:31895/TCP   34s   app=app3-nginx   app=app3-nginx
kubernetes                    ClusterIP   10.80.0.1      <none>        443/TCP        47d   <none>           component=apiserver,provider=kubernetes

kubectl get ingress -o wide --show-labels
NAME                  CLASS    HOSTS   ADDRESS   PORTS   AGE   LABELS
ingress-internal-lb   <none>   *                 80      37s   <none>

kubectl get backendconfig -o wide --show-labels
No resources found in default namespace.

simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl describe ingress ingress-internal-lb
Name:             ingress-internal-lb
Labels:           <none>
Namespace:        default
Address:          10.128.0.63
Ingress Class:    <none>
Default backend:  app3-nginx-nodeport-service:80 (10.76.1.178:80)
Rules:
  Host        Path  Backends
  ----        ----  --------
  *
              /app1   app1-nginx-nodeport-service:80 (10.76.0.28:80)
              /app2   app2-nginx-nodeport-service:80 (10.76.1.177:80)
Annotations:  ingress.kubernetes.io/backends:
                {"k8s1-3b22a415-default-app1-nginx-nodeport-service-80-28b50edc":"HEALTHY","k8s1-3b22a415-default-app2-nginx-nodeport-service-80-61584a78"...
              ingress.kubernetes.io/forwarding-rule: k8s2-fr-jdj5k2n0-default-ingress-internal-lb-fkzbq0io
              ingress.kubernetes.io/target-proxy: k8s2-tp-jdj5k2n0-default-ingress-internal-lb-fkzbq0io
              ingress.kubernetes.io/url-map: k8s2-um-jdj5k2n0-default-ingress-internal-lb-fkzbq0io
              kubernetes.io/ingress.class: gce-internal
Events:
  Type    Reason     Age                  From                     Message
  ----    ------     ----                 ----                     -------
  Normal  Sync       63s                  loadbalancer-controller  UrlMap "k8s2-um-jdj5k2n0-default-ingress-internal-lb-fkzbq0io" created
  Normal  Sync       61s                  loadbalancer-controller  TargetProxy "k8s2-tp-jdj5k2n0-default-ingress-internal-lb-fkzbq0io" created
  Normal  Sync       50s                  loadbalancer-controller  ForwardingRule "k8s2-fr-jdj5k2n0-default-ingress-internal-lb-fkzbq0io" created
  Normal  IPChanged  50s                  loadbalancer-controller  IP is now 10.128.0.63
  Normal  Sync       48s (x4 over 3m37s)  loadbalancer-controller  Scheduled for sync
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ kubectl exec -it curl-pod -- /bin/sh
~ $ curl http://10.128.0.63/
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>~ $
~ $
~ $ curl http://10.128.0.63/app1/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(228, 250, 210);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App1</p>
   </body>
</html>~ $
~ $
~ $ curl http://10.128.0.63/app2/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(221, 210, 250);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App2</p>
   </body>
</html>~ $
~ $
~ $ curl http://10.76.1.178/
<!DOCTYPE html>
<html>
   <body style="background-color:lightgoldenrodyellow;">
      <h1>Welcome to Stack Simplify</h1>
      <p>Kubernetes Fundamentals Demo</p>
      <p>Application Version: V1</p>
   </body>
</html>~ $
~ $
~ $ curl http://10.76.0.28/app1/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(228, 250, 210);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App1</p>
   </body>
</html>~ $
~ $
~ $ curl http://10.76.1.177/app2/
<!DOCTYPE html>
<html>
   <body style="background-color:rgb(221, 210, 250);">
      <h1>Welcome to Stack Simplify</h1>
      <p>Application Name: App2</p>
   </body>
</html>~ $
~ $ exit
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ ls -ltr
total 772
-rw-r--r-- 1 simplyrahul simplyrahul   3275 Aug 26 14:03 README.md
drwxr-xr-x 2 simplyrahul simplyrahul   4096 Aug 26 14:03 02-kube-manifests-curl
-rwxr-xr-x 1 simplyrahul simplyrahul 133784 Oct  8 16:02 vpc-network-subnet.png
-rwxr-xr-x 1 simplyrahul simplyrahul 166026 Oct  8 16:02 gce-internal-loadbalancer-details.png
-rwxr-xr-x 1 simplyrahul simplyrahul 468282 Oct  8 16:03 app1-internal-loadbalance.png
drwxr-xr-x 2 simplyrahul simplyrahul   4096 Oct  8 17:50 01-kube-manifests
-rw-r--r-- 1 simplyrahul simplyrahul    287 Oct  8 17:51 00-create-proxy-only-subnet.txt
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ cp /mnt/c/Users/Rahul/Downloads/gce-internal-loadbalancer-details-working.png .
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ cp /mnt/c/Users/Rahul/Downloads/proxy-only-subnet.png .
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ git add -A .
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$ git commit -am"gce-internal proxy-only-subnet"
[main dfd53ba] gce-internal proxy-only-subnet
 6 files changed, 9 insertions(+)
 create mode 100644 54-GKE-Ingress-InternalLB/00-create-proxy-only-subnet.txt
 create mode 100755 54-GKE-Ingress-InternalLB/app1-internal-loadbalance.png
 create mode 100755 54-GKE-Ingress-InternalLB/gce-internal-loadbalancer-details-working.png
 create mode 100755 54-GKE-Ingress-InternalLB/gce-internal-loadbalancer-details.png
 create mode 100755 54-GKE-Ingress-InternalLB/proxy-only-subnet.png
 create mode 100755 54-GKE-Ingress-InternalLB/vpc-network-subnet.png
simplyrahul@DESKTOP-C4GRDQ2:~/gke/github/54-GKE-Ingress-InternalLB$
